HOOKS & REACT DETAILS
- can review react details in terminal
	npm info react
		spits out a HUGE object in the console
		notice the dist-tags, the 'distribution tags':
			{ name: 'react',
			  description: 'React is a JavaScript library for building user interfaces.',
			  'dist-tags': 
			   { latest: '16.6.3',
			     next: '16.7.0-alpha.2',
			     canary: '0.0.0-4a1072194',
			     unstable: '0.0.0-0c756fb-f7f79fd' },
		the next dist tag, here, uses the hooks release
		Need to install the next versions of react & react dom

- install 'next' versions of react & react dom
	npm install react@next react-dom@next
	OR
	npm install react{,-dom}@next

- check version of instaled react in terminal
	npm ls react
	return react@16.70-alpha.2 now :)


The conversion process
App.js
- import useState
- convert from class to function
	class HooksApp extends React.Component
	to
	function App()
- convert constructor to useState hook implementation
	https://reactjs.org/docs/hooks-state.html

	from
		constructor(props){
		super(props)

		this.state = {
		    todos: [
		      {
		        text: "Learn about React",
		        isCompleted: false
		      },
		      {
		        text: "Meet friend for lunch",
		        isCompleted: false
		      },
		      {
		        text: "Build really cool todo app",
		        isCompleted: false
		      }
		    ]
		};
	to

- remove this.bind.this implementation from previous contructor
- covert class methods to const functions
	ex
	from
		addTodo(text){
			const newTodos = [...this.state.todos, { text }];
			this.setState({ todos: newTodos });
		};
	to 
		const addTodo = todoText => {
			const newTodos = [...this.state.todos, { todoText }];
			this.setState({ todos: newTodos });
		};

- convert all state references in new functional methods
	ex 
	from 
	const addTodo = todoText => {
		const newTodos = [...this.state.todos, { todoText }];
		this.setState({ todos: newTodos });
	};
	to
	const addTodo = todoText => {
		const newTodos = [...todos, { todoText }];
		setTodos(newTodos);
	}

	repeat for the remaining functional methods (addTodo, completeTodo)

- remove class render method
- also remove destructured state vals from previous render method
	was 
		//destructure to-dos from state
		const { todos } = this.state;





